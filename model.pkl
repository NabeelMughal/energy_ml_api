import pandas as pd
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split, cross_val_score
from sklearn.metrics import accuracy_score
import joblib

# 1. Load dataset from Excel
df = pd.read_excel("office_load_dataset_24hr.xlsx")

# 2. Convert times to minutes since midnight
df["Office Start Time"] = pd.to_datetime(df["Office Start Time"], format="%H:%M").dt.hour * 60 + pd.to_datetime(df["Office Start Time"], format="%H:%M").dt.minute
df["Office End Time"] = pd.to_datetime(df["Office End Time"], format="%H:%M").dt.hour * 60 + pd.to_datetime(df["Office End Time"], format="%H:%M").dt.minute

# 3. Create features and labels
X = df[["Office Start Time", "Office End Time", "Load During Office Time", "Load After Office Time"]]
y = df["Action"]

# 4. Train/test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 5. Train the model
model = DecisionTreeClassifier(random_state=42)
cv_scores = cross_val_score(model, X_train, y_train, cv=5, scoring="accuracy")
print("Cross-Validation Accuracy:", cv_scores.mean())

model.fit(X_train, y_train)
y_pred = model.predict(X_test)
print("Test Accuracy:", accuracy_score(y_test, y_pred))

# 6. Save trained model
joblib.dump(model, "model.pkl")
